package com.gli.service;

import com.gli.model.Quote;
import org.springframework.stereotype.Service;

@Service
public class QuoteCalculationService {

    public double calculatePremium(Quote quote) {
        double basePremium = 500;

        // Annual revenue impact (1%)
        basePremium += quote.getAnnualRevenue() * 0.01;

        // Industry risk multiplier
        basePremium *= getIndustryRiskMultiplier(quote.getBusinessType());

        // Claim history
        basePremium += quote.getClaimHistory() * 100;

        // Location risk multiplier
        basePremium *= getLocationRiskMultiplier(quote.getLocationRisk());

        // Coverage limits component (5% of coverage amount)
        basePremium += quote.getCoverageAmount() * 0.05;

        // Deductible reduction (2%)
        basePremium -= quote.getDeductible() * 0.02;

        // Number of employees impact ($10 per employee)
        basePremium += quote.getNumberOfEmployees() * 10;

        // Optional coverages
        basePremium += getOptionalCoverages(quote);

        return basePremium;
    }

    private double getIndustryRiskMultiplier(String industry) {
        return switch (industry.toLowerCase()) {
            case "construction", "mining", "manufacturing" -> 1.5;
            case "retail", "transport", "healthcare" -> 1.3;
            case "education", "it", "consulting" -> 1.1;
            default -> 1.0;
        };
    }

    private double getLocationRiskMultiplier(String locationRisk) {
        return switch (locationRisk.toLowerCase()) {
            case "high" -> 1.5;
            case "moderate" -> 1.3;
            case "low" -> 1.1;
            default -> 1.0;
        };
    }

    private double getOptionalCoverages(Quote quote) {
        double coverageTotal = 0.0;

        if (quote.getBodilyInjuryCoverage() != null && quote.getBodilyInjuryCoverage() > 0)
            coverageTotal += getDiscountedRate(500, 0.9, 1.1);

        if (quote.getPropertyDamageCoverage() != null && quote.getPropertyDamageCoverage() > 0)
            coverageTotal += getDiscountedRate(300, 0.8, 1.0);

        if (quote.getPersonalAdvertisingInjuryCoverage() != null && quote.getPersonalAdvertisingInjuryCoverage() > 0)
            coverageTotal += getDiscountedRate(400, 0.85, 1.05);

        return coverageTotal;
    }

    private double getDiscountedRate(double baseRate, double min, double max) {
        // For now, return average of min/max multiplier
        return baseRate * ((min + max) / 2);
    }
}
